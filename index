<!doctype html>
<html lang="ja">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>器用貧乏の型診断｜5タイプ判定</title>
<meta name="description" content="あなたの“器用貧乏の型”を10問で判定。翻訳者／触媒／編集プロデューサー／実装ディレクター／アイデアメーカーの5タイプから診断します。" />
<!-- Google Fonts: Inter -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">
<style>
  /* ライトテーマの変数設定 */
  :root{
    --bg:#ffffff;    /* 全体背景 */
    --panel:#f9fafb; /* カード・パネル背景 */
    --ink:#1f2937;   /* メインテキスト */
    --muted:#6b7280; /* ミュートテキスト */
    --line:#e5e7eb;  /* 境界線 */
    --hi:#2563eb;    /* ハイライト（青） */
    --ok:#10b981;    /* 成功（緑） */
  }
  *{box-sizing:border-box}
  body{margin:0;background:var(--bg);color:var(--ink);
       font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;line-height:1.6}
  .wrap{max-width:960px;margin:36px auto;padding:0 16px}
  .card{background:var(--panel);border:1px solid var(--line);border-radius:16px;padding:22px;
        box-shadow:0 6px 15px rgba(0,0,0,.08)}
  h1{margin:0 0 6px;font-size:28px;font-weight:800;color:var(--hi);}
  .lead{color:var(--muted);margin:0 0 20px}
  h2{margin:16px 0 8px;font-size:20px;font-weight:700;color:var(--ink);}
  .q{margin:12px 0;padding:16px;border:1px solid var(--line);border-radius:12px;background:#ffffff}
  .q label{display:block;font-weight:700;margin-bottom:8px;color:var(--ink);}
  .scale{display:flex;gap:8px;flex-wrap:wrap}
  .scale input{display:none}
  /* 選択肢のラベルスタイル */
  .scale label{flex:1;min-width:64px;text-align:center;padding:10px;border:2px solid var(--line);border-radius:10px;cursor:pointer;color:var(--ink);transition:all 0.15s ease}
  .scale label:hover{background:#f3f4f6}
  /* 選択時のスタイル */
  .scale input:checked+label{border-color:var(--hi);background:var(--hi);color:#fff;font-weight:800;box-shadow:0 0 0 4px rgba(37, 99, 235, 0.2)}
  .btns{display:flex;gap:12px;flex-wrap:wrap;margin-top:20px}
  /* メインボタン */
  button{background:var(--hi);border:none;color:#fff;padding:14px 20px;border-radius:12px;font-weight:800;cursor:pointer;transition:background 0.2s ease;box-shadow:0 4px 6px rgba(37, 99, 235, 0.2)}
  button:hover{background:#1d4ed8}
  /* セカンダリボタン */
  button.secondary{background:#f3f4f6;color:var(--ink);border:1px solid var(--line);box-shadow:none;}
  button.secondary:hover{background:#e5e7eb}
  .muted{color:var(--muted)}
  .row{display:grid;grid-template-columns:1fr 1fr;gap:16px}
  .row > div{background:#ffffff;border:1px solid var(--line);border-radius:12px;padding:16px}
  .pill{display:inline-block;padding:4px 12px;border:1px solid #d1d5db;border-radius:999px;font-size:13px;color:#4b5563}
  .share{display:flex;gap:10px;flex-wrap:wrap;margin-top:10px}
  .share a{text-decoration:none;font-weight:600;transition:opacity 0.2s ease}
  canvas{background:#fff;border-radius:12px;padding:12px;border:1px solid var(--line)}
  ol{padding-left:18px;margin-top:6px;}
  ol li{margin-bottom:6px;}
  @media (max-width:840px){ .row{grid-template-columns:1fr} }
</style>
</head>
<body>
<div class="wrap">
  <div class="card">
    <h1>器用貧乏の型診断</h1>
    <p class="lead">10問・5段階の自己評価で、あなたの“器用貧乏の型”を判定します。翻訳者／触媒／編集プロデューサー／実装ディレクター／アイデアメーカーの5タイプ。</p>

    <!-- 診断フォームの表示エリア -->
    <form id="form"></form>
    <div class="btns">
      <button type="button" id="calc">診断する</button>
      <button type="button" id="reset" class="secondary">リセット</button>
    </div>
  </div>

  <!-- 診断結果表示エリア (初期状態は非表示) -->
  <div id="resultCard" class="card" style="margin-top:16px;display:none">
    <div class="row">
      <div>
        <h2>あなたの型（判定）</h2>
        <div id="winner" style="font-size:24px;font-weight:800;margin-bottom:6px;color:var(--hi)"></div>
        <div id="summary" class="muted"></div>
        <div style="margin-top:8px"><span id="tieNote" class="pill" style="display:none;background:#fef3c7;border-color:#fde68a;color:#92400e;font-weight:600">同点は優先順で判定</span></div>
      </div>
      <div>
        <h2>タイプ別スコア</h2>
        <canvas id="chart" height="200"></canvas>
      </div>
    </div>

    <div class="row" style="margin-top:24px">
      <div>
        <h2>強み</h2>
        <div id="strength"></div>
        <h2 style="margin-top:14px">よくある悩み</h2>
        <div id="pain"></div>
      </div>
      <div>
        <h2>器用リッチに進化すると</h2>
        <div id="evolve"></div>
        <h2 style="margin-top:14px">次の一手（14日）</h2>
        <ol id="actions"></ol>
      </div>
    </div>

    <div style="margin-top:24px;border-top:1px solid var(--line);padding-top:16px;">
      <h2>結果の保存とシェア</h2>
      <div class="share">
        <!-- 画像保存・PDF保存機能のボタン -->
        <button id="saveImg" class="secondary" type="button">画像として保存</button>
        <button id="savePdf" class="secondary" type="button">PDFとして保存</button>
        <button id="copy" type="button">テキストをコピー</button>
        <a id="xshare" class="pill" target="_blank" rel="noopener" style="background:#000;color:#fff;border-color:#000;">Xでシェア</a>
        <a id="lnshare" class="pill" target="_blank" rel="noopener" style="background:#0a66c2;color:#fff;border-color:#0a66c2;">LinkedInでシェア</a>
      </div>
      <p class="muted" style="margin-top:6px;font-size:14px;">ハッシュタグ：#器用貧乏の型診断</p>
    </div>
  </div>
</div>

<!-- 外部ライブラリ (グラフ描画、HTMLキャプチャ、PDF生成) -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jspdf@2.5.1/dist/jspdf.umd.min.js"></script>

<script>
/* =========================
   設定・文言（ここだけ編集で運用可能）
   ========================= */
const SITE_URL = ''; // 例: 'https://yourname.github.io/kiyou-diagnosis/'。空なら自動で現在URLを使用
const TYPES = [
  { key:'translator',   name:'翻訳者型',        order:1, color:'rgba(37, 99, 235, 0.6)' }, // Blue (優先度1)
  { key:'catalyst',     name:'触媒型',          order:2, color:'rgba(168, 85, 247, 0.6)' }, // Purple (優先度2)
  { key:'editor',       name:'編集プロデューサー型', order:3, color:'rgba(234, 179, 8, 0.6)' }, // Yellow (優先度3)
  { key:'director',     name:'実装ディレクター型',    order:4, color:'rgba(239, 68, 68, 0.6)' }, // Red (優先度4)
  { key:'ideator',      name:'アイデアメーカー型',    order:5, color:'rgba(16, 185, 129, 0.6)' } // Green (優先度5)
];

const QUESTIONS = [
  { id:'q1',  text:'初めてのテーマでも、人にわかりやすく説明するのが得意だ',       type:'translator' },
  { id:'q2',  text:'新しい人と人を紹介したり、場をつなぐのが好きだ',                   type:'catalyst' },
  { id:'q3',  text:'バラバラの情報を整理して、見やすくまとめるのが好きだ',             type:'editor' },
  { id:'q4',  text:'進まない仕事を見ると、段取りを組んで前に進めてしまう',             type:'director' },
  { id:'q5',  text:'アイデアや企画を考えるのが楽しく、次々と思いつく',                 type:'ideator' },
  { id:'q6',  text:'相手の知らない分野を、自分の言葉でかみ砕いて説明したことがある',   type:'translator' },
  { id:'q7',  text:'勉強会や交流会で「人と人をつなげる役」になることが多い',           type:'catalyst' },
  { id:'q8',  text:'資料や投稿で「見やすい」「分かりやすい」と言われたことがある',     type:'editor' },
  { id:'q9',  text:'締め切り前は「自分がタスクを割り振って回した方が早い」と思う',     type:'director' },
  { id:'q10', text:'アイデアをよく書き留めるが、形にならないまま溜まりがちだ',           type:'ideator' },
];

const FEEDBACK = {
  translator: {
    name:'翻訳者型',
    summary:'専門的で難しい情報をかみ砕き、異なる領域の橋渡し役を担う「知の通訳者」。',
    strength:'専門的で難しいことを、誰にでもわかる言葉で説明できる。初見領域の理解も早く、橋渡し役になれる。',
    pain:'「便利な説明係」で終わり、専門家として見られにくいことがある。',
    evolve:'複数分野をつなぐ「知の翻訳家」。研修・出版・ファシリテーションで価値を発揮。',
    actions:[
      '自分の翻訳プロセスを3ステップで言語化する（例：傾聴→要約→比喩）',
      'よくある質問5件に1分回答を作り、録音して言い回しを磨く',
      '図解テンプレを1枚作り、説明に必ず添える'
    ]
  },
  catalyst: {
    name:'触媒型',
    summary:'人と人、アイデアとアイデアを結びつけ、安心感のある場で化学反応を引き起こす「場づくり名人」。',
    strength:'人と人をつなぎ、安心感のある場をつくる。つながりから化学反応を起こす。',
    pain:'自分の専門が弱く見え、「誰とでも仲良くする人」で止まりがち。',
    evolve:'共創コミュニティを動かすファシリテーター。企業や地域のイノベーションで不可欠な存在に。',
    actions:[
      '紹介カード（この人×この人で何が起きる？）を週3件書く',
      'イベント後24時間以内に「次の一手メール」を3通送る',
      'つなぐ分野を2つに絞り、自己紹介に明記する'
    ]
  },
  editor: {
    name:'編集プロデューサー型',
    summary:'情報の収集、整理、構造化、そして「伝わる見せ方」に長けた、コンテンツの構造設計者。',
    strength:'情報収集・整理・見せ方が巧み。伝わる構造を設計できる。',
    pain:'まとめ役に回り、自分の影響力が見えにくい。',
    evolve:'ホワイトペーパーやZine、教材化で編集力をIP化し、発信の核にできる。',
    actions:[
      '1枚の構造テンプレ（問題→洞察→解決→次アクション）を固定',
      '過去事例を3枚スライド（Before/After/手順）で再編集',
      '月1本のZine/ノートを発行する'
    ]
  },
  director: {
    name:'実装ディレクター型',
    summary:'計画の立案から実行まで、タスクと人をまとめあげ、プロジェクトを確実に前進させる推進者。',
    strength:'段取り・推進力に優れ、計画を実行に移す力が強い。',
    pain:'裏方で消耗しがちで、自分の価値が可視化されにくい。',
    evolve:'伴走型B2Bやライセンス展開で「成果を形にする力」を資産化できる。',
    actions:[
      '着手→合意→完了の3ゲートで案件の流れを1枚化',
      '週次運用のチェックリストを作り、共有する',
      'ミニ提案書（1枚）をテンプレ化して反復する'
    ]
  },
  ideator: {
    name:'アイデアメーカー型',
    summary:'既存の枠組みにとらわれず、次々と新しい視点や企画を生み出す発想の源泉。',
    strength:'新しい発想や企画を連発できる。独自の切り口で場を活性化。',
    pain:'アイデアが形にならず、途中で飽きやすいと見られる。',
    evolve:'発想をフレーム化し、再現可能な企画モデルを量産するクリエイティブプロデューサーへ。',
    actions:[
      'アイデア選定の基準（インパクト×実行容易性）を数値で決める',
      '採択アイデア1本に2週間集中するルールを設定',
      'アイデア→検証→公開のミニサイクルを毎週回す'
    ]
  }
};

/* =========================
   UI描画（設問）
   ========================= */
const form = document.getElementById('form');
QUESTIONS.forEach((q,i)=>{
  const div = document.createElement('div'); div.className='q';
  const name = q.id;
  div.innerHTML = `
    <label for="${name}">${i+1}. ${q.text}</label>
    <div class="scale">
      ${[1,2,3,4,5].map(v=>`
        <input type="radio" id="${name}_${v}" name="${name}" value="${v}">
        <label for="${name}_${v}">${v}</label>
      `).join('')}
    </div>
    <div class="muted" style="margin-top:6px;font-size:14px;">1=全く当てはまらない ／ 5=とても当てはまる</div>
  `;
  form.appendChild(div);
});

/* =========================
   診断ロジック
   ========================= */
let chart;
const $ = sel => document.querySelector(sel);
const pick = name => {
  const n = document.querySelector(`input[name=${name}]:checked`);
  return n ? Number(n.value) : 0;
};

function calcScores(){
  // 質問ごとの点を型に集計
  const points = { translator:0, catalyst:0, editor:0, director:0, ideator:0 };
  for(const q of QUESTIONS){
    const v = pick(q.id);
    if(!v){ throw new Error('未回答の設問があります'); }
    points[q.type] += v;
  }
  // 勝者（同点は order 優先）
  const sorted = TYPES
    .map(t=>({key:t.key, name:t.name, order:t.order, score:points[t.key], color:t.color}))
    .sort((a,b)=> b.score===a.score ? a.order-b.order : b.score-a.score);
  const winner = sorted[0];
  const tie = sorted.filter(s=>s.score===winner.score).length>1;

  return { points, winner, tie, ranked:sorted };
}

/* =========================
   表示・シェア・保存
   ========================= */
function renderResult(model){
  const { points, winner, tie } = model;
  const fb = FEEDBACK[winner.key];
  const winnerType = TYPES.find(t=>t.key === winner.key);
  // グラフの色を強調色として使用するため、不透明度0.6を外し、完全に不透明にする
  const winnerColor = winnerType ? winnerType.color.replace(/,\s*0\.6\)/, ')') : 'rgb(37, 99, 235)';

  $('#resultCard').style.display = 'block';
  $('#winner').textContent = `あなたは「${fb.name}」です`;
  $('#winner').style.color = winnerColor;
  
  $('#summary').textContent = fb.summary;
  $('#tieNote').style.display = tie ? 'inline-block' : 'none';

  $('#strength').textContent = fb.strength;
  $('#pain').textContent     = fb.pain;
  $('#evolve').textContent   = fb.evolve;

  const ol = $('#actions'); ol.innerHTML='';
  fb.actions.forEach(a=>{ const li=document.createElement('li'); li.textContent=a; ol.appendChild(li); });

  // レーダーチャートの描画
  const ctx = document.getElementById('chart');
  chart && chart.destroy(); // 既存のチャートがあれば破棄
  chart = new Chart(ctx, {
    type:'radar',
    data:{
      labels:TYPES.map(t=>t.name.replace('型','')), // ラベルから「型」を削除して短くする
      datasets:[{ 
        label:'スコア', 
        data:TYPES.map(t=>points[t.key]),
        backgroundColor: winnerType.color, // 透過色を使用
        borderColor: winnerColor, // 不透過色を使用
        pointBackgroundColor: winnerColor,
        pointBorderColor: '#fff',
        pointHoverBackgroundColor: '#fff',
        pointHoverBorderColor: winnerColor
      }]
    },
    options:{ 
      scales:{ 
        r:{ 
          suggestedMin:0, 
          suggestedMax:10, // 質問が2問ずつなので最大10点
          ticks:{display:false, color:'var(--muted)'},
          grid:{color:'var(--line)'},
          angleLines:{color:'var(--line)'},
          pointLabels:{color:'var(--ink)', font:{size:14, weight:'bold'}}
        }
      }, 
      plugins:{
        legend:{display:false},
        tooltip:{
          callbacks:{
            label: (context) => ` ${context.dataset.label}: ${context.parsed.r}点`
          }
        }
      },
      responsive: true,
      maintainAspectRatio: false
    }
  });

  // シェア文・リンク
  const site = SITE_URL || (location.origin + location.pathname);
  const shareText = `私は「器用貧乏の型診断」で ${fb.name} でした。次の一手も明確になり、器用リッチを目指します！#器用貧乏の型診断\n${site}`;
  $('#copy').onclick = async ()=>{ 
    try{
      // document.execCommand('copy')は非推奨ですが、iframe環境で確実性が高いため使用
      const textarea = document.createElement('textarea');
      textarea.value = shareText;
      document.body.appendChild(textarea);
      textarea.select();
      document.execCommand('copy');
      document.body.removeChild(textarea);
      showNotification('診断結果をコピーしました');
    } catch(err){
      console.error('Copy failed:', err);
      showNotification('コピーに失敗しました', true);
    }
  };
  $('#xshare').href  = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}`;
  $('#lnshare').href = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(site)}`;
}

// カスタム通知 (alertの代替)
function showNotification(message, isError = false) {
    let notif = document.getElementById('custom-notification');
    if (!notif) {
        notif = document.createElement('div');
        notif.id = 'custom-notification';
        document.body.appendChild(notif);
    }
    
    notif.textContent = message;
    notif.style.cssText = `
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: ${isError ? '#ef4444' : '#10b981'};
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        opacity: 0;
        transition: opacity 0.5s, transform 0.5s;
        z-index: 1000;
    `;
    
    // 表示
    setTimeout(() => {
        notif.style.opacity = '1';
        notif.style.transform = 'translate(-50%, 0)';
    }, 10);
    
    // 非表示
    setTimeout(() => {
        notif.style.opacity = '0';
        notif.style.transform = 'translate(-50%, 20px)';
        setTimeout(() => {
            notif.remove();
        }, 500);
    }, 3000);
}

// 画像として保存（html2canvasを使用）
async function saveAsImage(){
  const el = document.getElementById('resultCard');
  // 描画時に背景色を指定することで、透過を防ぎ、白ベースを維持
  const canvas = await html2canvas(el, {backgroundColor:'#f9fafb', scale:2, useCORS: true});
  const a = document.createElement('a');
  a.href = canvas.toDataURL('image/png');
  a.download = 'kiyou-type-result.png';
  a.click();
}

// PDFとして保存（jspdfを使用）
async function saveAsPdf(){
  const el = document.getElementById('resultCard');
  // 描画時に背景色を指定
  const canvas = await html2canvas(el, {backgroundColor:'#f9fafb', scale:2, useCORS: true});
  const imgData = canvas.toDataURL('image/png');
  const { jsPDF } = window.jspdf;
  // A4縦向きでPDFを初期化
  const pdf = new jsPDF({orientation:'p', unit:'pt', format:'a4'});
  
  // PDF内での画像サイズ計算 (A4の幅基準)
  const A4_WIDTH_PT = 595.28;
  const MARGIN_PT = 50;
  const w = A4_WIDTH_PT - (MARGIN_PT * 2);
  const h = canvas.height*(w/canvas.width);
  
  // PDFの背景を白に設定
  pdf.setFillColor(255,255,255); pdf.rect(0,0,A4_WIDTH_PT, 842,'F');
  
  // PDFに画像を追加
  pdf.addImage(imgData,'PNG',MARGIN_PT, MARGIN_PT, w, h);
  pdf.save('kiyou-type-result.pdf');
}

/* =========================
   イベントリスナー
   ========================= */
document.getElementById('calc').addEventListener('click', ()=>{
  try{
    const model = calcScores();
    renderResult(model);
    // 結果に自動スクロール
    window.scrollTo({top:document.getElementById('resultCard').offsetTop-8, behavior:'smooth'});
  }catch(e){
    // 未回答がある場合のエラー通知
    showNotification(e.message || 'エラーが発生しました', true);
  }
});

document.getElementById('reset').addEventListener('click', ()=>{
  document.querySelectorAll('input[type=radio]').forEach(n=>n.checked=false);
  // チェック状態解除に伴い、見た目をリセット
  document.querySelectorAll('.scale label').forEach(label => {
      label.style.backgroundColor = '';
      label.style.color = 'var(--ink)';
      label.style.fontWeight = '400';
  });
  document.getElementById('resultCard').style.display='none';
  if(chart) chart.destroy();
  window.scrollTo({top:0, behavior:'smooth'});
});

// 保存・シェア機能のイベント設定
document.getElementById('saveImg').addEventListener('click', saveAsImage);
document.getElementById('savePdf').addEventListener('click', saveAsPdf);

</script>
</body>
</html>
